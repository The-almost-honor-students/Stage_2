# JMH version: 1.37
# VM version: JDK 17.0.16, OpenJDK 64-Bit Server VM, 17.0.16+8-LTS
# VM invoker: /Users/giselabelmontecruz/Library/Java/JavaVirtualMachines/ms-17.0.16/Contents/Home/bin/java
# VM options: -javaagent:/Applications/IntelliJ IDEA.app/Contents/lib/idea_rt.jar=50839:/Applications/IntelliJ IDEA.app/Contents/bin -Dfile.encoding=UTF-8
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 10 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.tahs.benchmark.IndexingBenchmarks.throughputIndexing_roundRobin
# Parameters: (bookId = 1342, datalakeDir = datalake)

# Run progress: 0,00% complete, ETA 00:05:00
# Fork: 1 of 1
# Warmup Iteration   1: 72,549 ops/s
# Warmup Iteration   2: 77,793 ops/s
# Warmup Iteration   3: 78,048 ops/s
# Warmup Iteration   4: 76,464 ops/s
# Warmup Iteration   5: 72,554 ops/s
Iteration   1: 72,544 ops/s
Iteration   2: 80,252 ops/s
Iteration   3: 79,667 ops/s
Iteration   4: 77,872 ops/s
Iteration   5: 74,673 ops/s
Iteration   6: 71,638 ops/s
Iteration   7: 81,019 ops/s
Iteration   8: 80,736 ops/s
Iteration   9: 79,018 ops/s
Iteration  10: 75,584 ops/s


Result "com.tahs.benchmark.IndexingBenchmarks.throughputIndexing_roundRobin":
  77,300 ±(99.9%) 5,232 ops/s [Average]
  (min, avg, max) = (71,638, 77,300, 81,019), stdev = 3,460
  CI (99.9%): [72,069, 82,532] (assumes normal distribution)


# JMH version: 1.37
# VM version: JDK 17.0.16, OpenJDK 64-Bit Server VM, 17.0.16+8-LTS
# VM invoker: /Users/giselabelmontecruz/Library/Java/JavaVirtualMachines/ms-17.0.16/Contents/Home/bin/java
# VM options: -javaagent:/Applications/IntelliJ IDEA.app/Contents/lib/idea_rt.jar=50839:/Applications/IntelliJ IDEA.app/Contents/bin -Dfile.encoding=UTF-8
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 10 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.tahs.benchmark.IndexingBenchmarks.indexLatency_perBook
# Parameters: (bookId = 1342, datalakeDir = datalake)

# Run progress: 50,00% complete, ETA 00:02:31
# Fork: 1 of 1
# Warmup Iteration   1: 0,232 s/op
# Warmup Iteration   2: 0,226 s/op
# Warmup Iteration   3: 0,227 s/op
# Warmup Iteration   4: 0,227 s/op
# Warmup Iteration   5: 0,226 s/op
Iteration   1: 0,226 s/op
Iteration   2: 0,226 s/op
Iteration   3: 0,225 s/op
Iteration   4: 0,225 s/op
Iteration   5: 0,226 s/op
Iteration   6: 0,227 s/op
Iteration   7: 0,226 s/op
Iteration   8: 0,226 s/op
Iteration   9: 0,226 s/op
Iteration  10: 0,226 s/op


Result "com.tahs.benchmark.IndexingBenchmarks.indexLatency_perBook":
  0,226 ±(99.9%) 0,001 s/op [Average]
  (min, avg, max) = (0,225, 0,226, 0,227), stdev = 0,001
  CI (99.9%): [0,225, 0,226] (assumes normal distribution)


# Run complete. Total time: 00:05:07

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

NOTE: Current JVM experimentally supports Compiler Blackholes, and they are in use. Please exercise
extra caution when trusting the results, look into the generated code to check the benchmark still
works, and factor in a small probability of new VM bugs. Additionally, while comparisons between
different JVMs are already problematic, the performance difference caused by different Blackhole
modes can be very significant. Please make sure you use the consistent Blackhole mode for comparisons.

Benchmark                                         (bookId)  (datalakeDir)   Mode  Cnt   Score   Error  Units
IndexingBenchmarks.throughputIndexing_roundRobin      1342       datalake  thrpt   10  77,300 ± 5,232  ops/s
IndexingBenchmarks.indexLatency_perBook               1342       datalake   avgt   10   0,226 ± 0,001   s/op

Benchmark result is saved to benchmarking_results/indexing/data/jmh_t2.csv
